name: Setup Dependencies
description: ""

inputs:
  os:
    description: Operating System
    required: false
    default: "linux"
  cache-id:
    description: Cache ID
    required: true

runs:
  using: composite
  steps:
    - name: Install Dependencies on Windows
      if: inputs.os == 'windows'
      env:
        MOZTOOLS_LINK: https://github.com/servo/servo-build-deps/releases/download/msvc-deps
        MOZTOOLS_VERSION: "4.0"
        MOZTOOLS_PATH: ${{ github.workspace }}\\target\\dependencies\\moztools-4.0
      shell: pwsh
      run: |
        curl -SL "$env:MOZTOOLS_LINK/moztools-$env:MOZTOOLS_VERSION.zip" --create-dirs -o target/dependencies/moztools.zip
        cd target/dependencies && unzip -qo moztools.zip -d .
        echo "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Tools\LLVM\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "MOZTOOLS_PATH=$env:MOZTOOLS_PATH" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "CC=clang-cl" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "CXX=clang-cl" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "AR=llvm-lib" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "LINKER=lld-link" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Install Dependencies on MacOS
      if: inputs.os == 'macos'
      shell: bash
      run: |
        brew list -1 | grep python | while read formula; do brew unlink $formula; brew link --overwrite $formula; done
        brew install llvm yasm
        echo "RUSTC_WRAPPER=sccache" >> $GITHUB_PATH

    - name: Install Dependencies on Linux
      if: inputs.os == 'linux'
      shell: bash
      run: |
        sudo apt install -y clang llvm
        echo "RUSTC_WRAPPER=sccache" >> $GITHUB_PATH

    - name: Install Just
      uses: taiki-e/install-action@just

    - name: Setup sccache
      uses: mozilla-actions/sccache-action@v0.0.3

    - name: Cache Cargo Cache and Git Database
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
        key: cargo-${{ inputs.cache-id }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: cargo-${{ inputs.cache-id }}-
